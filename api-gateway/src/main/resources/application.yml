server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: bot-service
          uri: http://bot-service:8081
          predicates:
            - Path=/bot/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@remoteAddrKeyResolver}"
            - name: CircuitBreaker
              args:
                name: botServiceCircuit
                fallbackUri: forward:/fallback/bot

        - id: parser-service
          uri: http://parser-service:8082
          predicates:
            - Path=/parser/**
          filters:
            - StripPrefix=1
            - CacheRequestBody

        - id: notification-service
          uri: http://notification-service:8083
          predicates:
            - Path=/notification/**
          filters:
            - StripPrefix=1

  data:
    redis:
      host: redis
      port: 6379

  logging:
    level: INFO


management:
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus
  metrics:
    tags:
      application: ${spring.application.name}